# Configuration file of install.softwares(Non-Github)
title = "Non-Github Configuration File"
[gmap]
source_url = "http://research-pub.gene.com/gmap/src/{{version}}.tar.gz"

version_newest = "gmap-gsnap-2017-04-21"

version_available = ["gmap-gsnap-2017-04-21", "gmap-gsnap-2017-03-17", "gmap-gsnap-2017-02-15", "gmap-gsnap-2016-11-07", "gmap-gsnap-2016-09-14", "gmap-gsnap-2016-06-30.v5", "gmap-gsnap-2015-12-31.v10", "gmap-gsnap-2015-07-23", "gmap-gsnap-2014-12-31.v2", "gmap-gsnap-2014-10-22", "gmap-gsnap-2014-08-20", "gmap-gsnap-2014-06-10", "gmap-gsnap-2014-05-15.v3", "gmap-gsnap-2014-03-28.v2", "gmap-gsnap-2013-10-28", "gmap-gsnap-2013-09-30.v2", "gmap-gsnap-2013-03-31.v5", "gmap-gsnap-2012-07-20.v3", "gmap-gsnap-2012-04-27", "gmap-gsnap-2012-01-11", "gmap-gsnap-2011-12-28", "gmap-gsnap-2011-11-30", "gmap-gsnap-2011-10-16", "gmap-gsnap-2011-09-14", "gmap-gsnap-2011-03-28", "gmap-gsnap-2010-07-27", "gmap-gsnap-2010-03-09", "gmap-2007-09-28", "gmap-2007-06-04", "gmap-2006-12-18", "gmap-2006-04-21", "gmap-2005-10-25", "gmap-2005-07-15", "gmap-2005-06-23", "gmap-2005-05-20", "gmap-2005-05-06", "gmap-2005-03-11"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[gmap.install]
linux = "./configure --prefix=`pwd` && make && make install"
mac = "sed -i s/\"## CFLAGS='-O3 -m64' .*\"/\"CFLAGS='-O3 -m64'\"/ config.site && ./configure --prefix=`pwd` && make && make install"
windows = "./configure --prefix=`pwd` && make && make install"

[annovar]
source_url = "http://www.openbioinformatics.org/annovar/download/0wgxR2rIVP/annovar.{{version}}.tar.gz"

version_newest = "latest"

version_available = ["latest"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[gatk_bundle]
source_url = "ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/{{version}}/"

source_is.dir = true

version_newest = "hg38"

version_available = ["hg38", "hg19", "hg18", "b37", "b36"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

[hisat2_reffa]
source_url = "ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/{{version}}.tar.gz"

version_newest = "grch38"

version_available = ["bdgp6", "bdgp6_tran", "ce10", "dm6", "grch37", "grch37_snp", "grch37_snp_tran", "grch37_snp_tran_ercc", "grch37_tran", "grch38", "grch38_snp", "grch38_snp_tran", "grch38_snp_tran_ercc", "grch38_tran", "grcm38", "grcm38_snp", "grcm38_snp_tran", "grcm38_snp_tran_ercc", "grcm38_tran", "hg19", "hg38", "hg38_snp_tran_oudejans", "hg38_tran", "mm10", "r64", "r64_tran", "rn6", "rn6_ercc", "rnor6", "sc3", "wbcel235", "wbcel235_tran", "zm3_snp_tran_ercc"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

[ucsc_reffa]
source_url = ["http://hgdownload.cse.ucsc.edu/goldenPath/{{version}}/bigZips/{{version}}.chromFa.tar.gz",
"http://hgdownload.cse.ucsc.edu/goldenPath/{{version}}/bigZips/chromFa.tar.gz"]
url_all_download = false

version_newest = "hg38"

version_available = ["hg19", "hg38"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

[ensemble_grch37_reffa]
source_url = "ftp://ftp.ensembl.org/pub/release-{{version}}/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.{{version}}.dna.primary_assembly.fa.gz"

version_newest = "75"

version_available = ["75"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

[ensemble_grch38_reffa]
source_url = "ftp://ftp.ensembl.org/pub/release-{{version}}/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"

version_newest = "87"

version_available = ["76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

[edena]
source_url = ["http://www.genomic.ch/edena/{{version}}.tar.gz", "http://www.genomic.ch/edena/{{version}}.zip"]
url_all_download = false

version_newest = "EdenaV3.131028"

version_available = ["EdenaV3.131028", "EdenaV3.130110", "EdenaV3.121122", "Edena3dev120926_linux64", "Edena3Dev120626_linux64", "Edena3Dev120626_linux32", "Edena3Dev120615_linux64", "Edena3Dev120615_linux32", "Edena3Dev110920_linux64", "Edena3Dev110920_linux32", "Edena3Dev110815_linux64", "Edena3Dev110815_linux32", "Edena3Dev110814_linux64", "Edena3Dev110814_linux32", "Edena3Dev110705_linux64", "Edena3Dev110705_linux32", "edena2.1.1_linux32", "edena2.1.1_linux64", "edena2.1.1_windows"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[edena.install]
linux = "make"
mac = "make"
windows = "make"

[ucsc_utils]
source_url = "http://hgdownload.cse.ucsc.edu/admin/exe/userApps.{{version}}.src.tgz"

version_newest = "v344"

version_available = ["v305", "v306", "v307", "v308", "v309", "v310", "v311", "v312", "v313", "v314", "v315", "v316", "v317", "v318", "v319", "v320", "v321", "v322", "v323", "v324", "v325", "v326", "v327", "v328", "v329", "v330", "v331", "v332", "v333", "v334", "v335", "v336", "v337", "v338", "v339", "v340", "v341", "v342", "v343", "v344"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[ucsc_utils.install]
linux = "make"
mac = "make"
windows = "make"

[fastqc]
source_url = ["http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v{{version}}.zip"]

version_newest = "0.11.5"

version_available = ["0.11.5", "0.11.4", "0.11.3", "0.11.2", "0.11.1", "0.10.1", "0.10.0", "0.9.6", "0.9.5", "0.9.4", "0.9.3", "0.9.2", "0.9.1", "0.9.0", "0.8.0", "0.7.2", "0.7.1", "0.7.0", "0.6.1", "0.6.0", "0.5.1", "0.5.0", "0.4.3", "0.4.2", "0.4.1", "0.4", "0.3.1", "0.3", "0.2", "0.1.1", "0.1"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["."]

[sqlite]
source_url = ["http://www.sqlite.org/2017/sqlite-autoconf-{{version}}.tar.gz",
              "http://www.sqlite.org/2016/sqlite-autoconf-{{version}}.tar.gz"]
url_all_download = false

version_newest = "3180000"

version_available = ["3180000", "3170000", "3130000"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[sqlite.before_install]
linux = "autoreconf -ivf"
mac = "autoreconf -ivf"
windows = "autoreconf -ivf"

[sqlite.install]
linux = "./configure --prefix=`pwd` && make && make install"
mac = "./configure --prefix=`pwd` && make && make install"
windows = "./configure --prefix=`pwd` && make && make install"


[cesa]
source_url = ["http://liulab.dfci.harvard.edu/CEAS/src/CEAS-Package-{{version}}.tar.gz"]

version_newest = "1.0.2"

version_available = ["1.0.2"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[cesa.install]
linux = "python setup.py install"
mac = "python setup.py install"
windows = "python setup.py install"

[novoalign]
source_url = ["http://bioinfo.rjh.com.cn/download/novocraft/download.php?filename=novocraft{{version}}.tar.gz"]

version_newest = "V3.07.01.Linux3.0"

version_available = ["V3.07.01.Linux3.0", "V3.07.01.Linux2.6", "V3.07.01.MacOSX", "V3.07.00.Linux3.0", "V3.07.00.Linux2.6", "V3.07.00.MacOSX", "V3.06.05.Linux3.0", "V3.06.05.Linux2.6", "V3.06.05.MacOSX", "V3.06.04.Linux3.0", "V3.06.04.Linux2.6", "V3.06.04.MacOSX", "V3.06.03.Linux3.0", "V3.06.03.Linux2.6", "V3.06.03.MacOSX", "V3.06.02.Linux3.0", "V3.06.02.Linux2.6", "V3.06.02.MacOSX", "V3.06.01.Linux3.0", "V3.06.01.Linux2.6", "V3.06.01.MacOSX", "V3.06.00.Linux3.0", "V3.06.00.Linux2.6", "V3.06.00.MacOSX", "V3.05.01.Linux3.0", "V3.05.01.Linux2.6", "V3.05.01.MacOSX", "V3.04.06.Linux3.0", "V3.04.06.Linux2.6", "V3.04.06.MacOSX", "V3.04.04.Linux3.0", "V3.04.04.Linux2.6", "V3.04.04.MacOSX", "V3.04.02.Linux3.0", "V3.04.02.Linux2.6", "V3.04.02.MacOSX", "V3.04.01.Linux3.0", "V3.04.01.Linux2.6", "V3.04.01.MacOSX", "V3.03.02.Linux3.0", "V3.03.02.Linux2.6", "V3.03.02.MacOSX", "V3.03.01.Linux3.0", "V3.03.01.Linux2.6", "V3.03.01.MacOSX", "V3.03.00.Linux3.0", "V3.03.00.Linux2.6", "V3.03.00.MacOSX", "V3.02.13.Linux3.0", "V3.02.13.Linux2.6", "V3.02.13.MacOSX", "V3.02.13.Linux3.0", "V3.02.13.Linux2.6", "V3.02.13.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.11.Linux3.0", "V3.02.11.Linux2.6", "V3.02.11.MacOSX", "V3.02.10.Linux3.0", "V3.02.10.Linux2.6", "V3.02.10.MacOSX", "V3.02.09.Linux3.0", "V3.02.09.Linux2.6", "V3.02.09.MacOSX", "V3.02.08.Linux3.0", "V3.02.08.Linux2.6", "V3.02.08.MacOSX", "V3.02.07.Linux3.0", "V3.02.07.Linux2.6", "V3.02.07.MacOSX", "V3.02.06.Linux3.0", "V3.02.06.Linux2.6", "V3.02.06.MacOSX"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[ssaha2]
source_url = ["ftp://ftp.sanger.ac.uk/pub/resources/software/ssaha2/ssaha2_{{version}}.tgz"]

version_newest = "v2.5.5_x86_64"

version_available = ["v2.5.1_mac", "v2.5.2_i686", "v2.5.2_ia64", "v2.5.2_x86_64", "v2.5.3_i686", "v2.5.3_ia64", "v2.5.3_x86_64", "v2.5.4_i686", "v2.5.4_MacOSX_i386", "v2.5.4_x86_64", "v2.5.5_i686", "v2.5.5_x86_64"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[gatk]
source_url = ["http://bioinfo.rjh.com.cn/download/gatk/download.php?filename=gatk{{version}}.zip"]

version_newest = "3.7"

version_available = ["3.7", "3.6", "3.5", "3.4-46"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[mutect]
source_url = ["http://bioinfo.rjh.com.cn/download/gatk/download.php?filename=mutect{{version}}.zip"]

version_newest = "1.1.7"

version_available = ["1.1.7", "1.1.4", "1.1.1"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[mutect.install]
linux = ""
mac = ""
windows = ""


[sratools]
version_newest = "2.8.2-1"

version_available = ["2.4.2-1", "2.4.2-3", "2.4.3", "2.4.4", "2.4.5", "2.4.5-5", "2.4.5-6", "2.5.0", "2.5.1", "2.5.2", "2.5.3", "2.5.4", "2.5.5", "2.5.6", "2.5.7", "2.5.8", "2.5.8-1", "2.6.2", "2.6.3", "2.7.0", "2.8.0", "2.8.0-1", "2.8.0-2", "2.8.1", "2.8.1-2", "2.8.1-3", "2.8.2", "2.8.2-1"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[sratools.source_url]
linux = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.@>@if('{{os.version}}' == 'centos') {'{{version}}-centos_linux64'} else if ('{{os.version}}' == 'ubuntu') {'{{version}}-ubuntu64'}@<@.tar.gz"
windows = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.{{version}}-win64.zip"
mac = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.{{version}}-mac64.zip"

[sratools.install]
linux = ""
mac = ""
windows = ""


[fusioncatcher]
source_url = ["https://sourceforge.net/projects/fusioncatcher/files/fusioncatcher_{{version}}.zip", 
              "https://sourceforge.net/projects/fusioncatcher/files/bootstrap.py"]
decompress = [true, false]

#dependence = ["bwa", "blat", "faToTwoBit", "bowtie", "bowtie2", "star", "sratools", "velvet", "lzo", "pigz", "seqtk", "picard", "samtools_old", "pxz", "liftover"]
#dependence_version = ["v0.7.15", "latest", "latest", "v1.2.0", "v2.3.0", "2.5.3a", "2.8.2-1", "1.2.10", "2.10", "2.2.4", "1.2-r101b", "2.9.0", "0.1.19", "master", "latest"]

version_newest = "v0.99.7b"

version_available = ["v0.99.7b", "v0.99.7a", "v0.99.6a", "v0.99.5a", "v0.99.4e", "v0.99.4d", "v0.99.4c", "v0.99.4b", "v0.99.4a", "v0.99.3e", "v0.99.3d", "v0.99.3c", "v0.99.3b", "v0.99.3a", "v0.99.2", "v0.99.1", "v0.99.0", "v0.95", "v0.96", "v0.93", "v0.94", "v0.98", "v0.97"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[fusioncatcher.install]
linux = ""
mac = ""
windows = ""

[pigz]
source_url = "http://cdn-fastly.deb.debian.org/debian/pool/main/p/pigz/pigz_{{version}}.orig.tar.gz"

version_newest = "2.2.4"

version_available = ["2.2.4", "2.3.1", "2.3.4"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[pigz.install]
linux = "make"
mac = "make"
windows = "make"

[velvet]
source_url = "http://www.ebi.ac.uk/~zerbino/velvet/velvet_{{version}}.tgz"

version_newest = "1.2.10"

version_available = ["1.2.10", "0.7.01", "0.6.01", "0.5.01", "0.4", "0.3"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[velvet.install]
linux = "make"
mac = "make"
windows = "make"

[lzo]
source_url = "http://www.oberhumer.com/opensource/lzo/download/lzo-{{version}}.tar.gz"

version_newest = "2.10"

version_available = ["2.00", "2.01", "2.02", "2.03", "2.04", "2.05", "2.06", "2.07", "2.08", "2.09", "2.10"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[lzo.install]
linux = ["./configure --prefix=`pwd` --enable-shared && make", " make install"]
mac = ["./configure --prefix=`pwd` --enable-shared && make", " make install"]


[lzop]
source_url = "http://www.lzop.org/download/lzop-{{version}}.tar.gz"

dependence = ["lzo"]

dependence_version = ["2.10"]

version_newest = "1.03"

version_available = ["1.03", "1.02-rc1", "1.01"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[lzop.install]
linux = "export CPPFLAGS='-I{{lzo:source.dir}}/include';export LDFLAGS='-L{{lzo:source.dir}}/src/.libs'; ./configure --prefix=`pwd`&& make"
mac = "export CPPFLAGS='-I{{lzo:source.dir}}/include';export LDFLAGS='-L{{lzo:source.dir}}/src/.libs'; ./configure --prefix=`pwd`&& make"

[fusioncatcher_reffa]
source_url = ["https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.aa",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ab",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ac",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ad"]
decompress = false
version_newest = "86"

version_available = ["86"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[fusioncatcher_reffa.install]
linux = ""
mac = ""
windows = ""

[snpeff]
source_url = ["https://sourceforge.net/projects/snpeff/files/snpEff_{{version}}_core.zip"]

version_newest = "v4_3l"

version_available = ["v4_3l", "v4_3k", "v4_3i", "v4_3g", "v4_3f", "v4_3e", "v4_3c", "v4_3b", "v4_3a", "v4_3", "v4_2", "v4_1l", "v4_1k", "v4_1j", "v4_1i", "v4_1h", "v4_1g", "v4_1f", "v4_1e", "v4_1d", "v4_1c", "v4_1b", "v4_1", "v4_0", "v3_6", "v3_5", "v3_4", "v3_3", "v3_2", "v3_1", "v3_0", "v3_0a"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[snpeff.install]
linux = ""
mac = ""
windows = ""

[tvc]
source_url = ["http://updates.iontorrent.com/tvc_standalone/tvc-{{version}}.tar.gz"]
decompress = false

version_newest = "5.2.2"

version_available = ["5.2.2", "5.2.1", "5.0.3"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[tvc.install]
linux = '''Rscript -e "fn.sh <- system.file('extdata', 'scripts/install_tvc.sh', package = 'BioInstaller'); system(sprintf('sh %s {{destdir}} {{version}}', fn.sh))"'''
mac = '''Rscript -e "fn.sh <- system.file('extdata', 'scripts/install_tvc.sh', package = 'BioInstaller'); system(sprintf('sh %s {{destdir}} {{version}}', fn.sh))"'''

[imagej]
version_newest = "150"

version_available = ["150"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[imagej.source_url]
linux = "http://wsr.imagej.net/distros/linux/ij{{version}}-linux64-java8.zip"
mac = "http://wsr.imagej.net/distros/osx/ij{{version}}-osx-java8.zip"
windows = "http://wsr.imagej.net/distros/win/ij{{version}}-win-java8.zip"

[imagej.install]
linux = ""
mac = ""
windows = ""

[zlib]
version_newest = "1.2.11"

version_available = ["1.2.11", "1.2.10", "1.2.9", "1.2.7", "1.2.8", "1.2.6", "1.2.5", "1.2.4", "1.2.3", "1.2.1", "1.1.4", "1.1.3"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./lib"]

[zlib.source_url] 
linux = ["https://sourceforge.net/projects/libpng/files/zlib/{{version}}/zlib-{{version}}.tar.gz"]
mac = ["https://sourceforge.net/projects/libpng/files/zlib/{{version}}/zlib-{{version}}.tar.gz"]
windows = ["https://sourceforge.net/projects/libpng/files/zlib/{{version}}/zlib@>@str_replace_all('{{version}}', fixed('.'), '')@<@.zip"]

[zlib.install]
linux = "./configure --prefix=`pwd` && make && make install"
mac = "./configure --prefix=`pwd` && make && make install"
windows = ""

[bzip2]
source_url = "http://www.bzip.org/{{version}}/bzip2-{{version}}.tar.gz"
version_newest = "1.0.6"

version_available = ["1.0.6"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[bzip2.install]
linux = "make && make install PREFIX=`pwd`"
mac = "make && make install PREFIX=`pwd`"
windows = ""

[armadillo]
source_url = ["@>@ if('{{version}}' != '4.600.1') {'https://sourceforge.net/projects/arma/files/armadillo-{{version}}.tar.xz'} else {'http://updates.iontorrent.com/updates/software/external/armadillo-{{version}}.tar.gz'}@<@"]

version_newest = "7.800.2"

version_available = ["7.800.2", "7.800.1", "4.600.1"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]

[armadillo.install]
linux = ["@>@if('{{version}}' != '4.600.1'){'./configure --prefix=`pwd` && make'} else {%'%sed -i 's:^// #define ARMA_USE_LAPACK$:#define ARMA_USE_LAPACK:g' include/armadillo_bits/config.hpp; sed -i 's:^// #define ARMA_USE_BLAS$:#define ARMA_USE_BLAS:g' include/armadillo_bits/config.hpp && cmake . && make -j4%'%}@<@"]
mac = ["@>@if('{{version}}' != '4.600.1'){'./configure --prefix=`pwd` && make'} else {%'%sed -i 's:^// #define ARMA_USE_LAPACK$:#define ARMA_USE_LAPACK:g' include/armadillo_bits/config.hpp; sed -i 's:^// #define ARMA_USE_BLAS$:#define ARMA_USE_BLAS:g' include/armadillo_bits/config.hpp && cmake . && make -j4%'%}@<@"]
windows = ""

[samstat]
source_url = "https://sourceforge.net/projects/samstat/files/samstat-{{version}}.tar.gz"

version_newest = "1.5.1"

version_available = ["1.5.1", "1.5"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[samstat.before_install]
linux = "autoreconf -ivf"
mac = "autoreconf -ivf"
windows = "autoreconf -ivf"

[samstat.install]
linux = "./configure --prefix=`pwd` && make && make install"
mac = "./configure --prefix=`pwd` && make && make install"
windows = "./configure --prefix=`pwd` && make && make install"

[prinseq]
source_url = "https://sourceforge.net/projects/prinseq/files/standalone/prinseq-lite-{{version}}.tar.gz"

version_newest = "0.20.4"

version_available = ["0.20.4", "0.20.3", "0.20.2", "0.20.1", "0.20", "0.19.5", "0.19.4", "0.19.3", "0.19.2", "0.19.1", "0.19", "0.18.3", "0.18.2", "0.18.1", "0.18", "0.17.4", "0.17.3", "0.17.2", "0.17.1", "0.17", "0.16", "0.15.1", "0.15", "0.14.4", "0.14.2", "0.14.1", "0.14", "0.13.2", "0.13.1", "0.13", "0.12", "0.11", "0.10", "0.9", "0.8"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]


[prinseq.install]
linux = ""
mac = ""
windows = ""

[solexaqa]
source_url = ["https://sourceforge.net/projects/solexaqa/files/src/SolexaQA++_v{{version}}.zip",
              "https://sourceforge.net/projects/solexaqa/files/src/SolexaQA_v.{{version}}.zip"]
url_all_download = false

version_newest = "3.1.7.1"

version_available = ["3.1.7.1", "3.1.7", "3.1.6", "3.1.5", "3.1.4", "3.1.3", "3.1.2", "3.1.1", "3.1", "3.0", "2.5", "2.4", "2.3", "2.2", "2.1", "2.0", "1.13"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./"]


[solexaqa.install]
linux = "chmod -R +x *"
mac = "chmod -R +x *"
windows = "chmod -R +x *"

[mapsplice2]
source_url = "http://protocols.netlab.uky.edu/~zeng/MapSplice-v{{version}}.zip"

version_newest = "2.2.1"

version_available = ["2.2.1", "2.2.0", "2.1.9", "2.1.8", "2.1.7", "2.1.6", "2.1.5", "2.1.4", "2.1.3", "2.1.2", "2.1.0"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]


[mapsplice2.install]
linux = "make"
mac = "make"
windows = "make"

[bcl2fastq2]
source_url = "https://support.illumina.com/content/dam/illumina-support/documents/downloads/software/bcl2fastq/bcl2fastq2-v{{version}}.tar.gz"

version_newest = "2.19.0"

version_available = ["2.19.0"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[bcl2fastq2.install]
linux = "mkdir build; cd build; ../src/configure --prefix={{destdir}} && make && make install"
mac = "mkdir build; cd build; ../src/configure --prefix={{destdir}} && make && make install"
windows = "mkdir build; cd build; ../src/configure --prefix={{destdir}} && make && make install"

[blat]
decompress = false
version_newest = "latest"

version_available = ["latest"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[blat.source_url]

linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/blat/blat"
windows = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat"

[blat.install]
linux = "chmod +x blat"
mac = "chmod +x blat"
windows = ""

[fatotwobit]
decompress = false
version_newest = "latest"

version_available = ["latest"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[fatotwobit.source_url]

linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/faToTwoBit"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/faToTwoBit"
windows = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/faToTwoBit"

[fatotwobit.install]
linux = "chmod +x faToTwoBit"
mac = "chmod +x faToTwoBit"
windows = ""

[liftover]
decompress = false
version_newest = "latest"

version_available = ["latest"]

after_failure = "echo 'fail!'"

after_success = "echo 'successful!'"

make_dir = ["./"]

bin_dir = ["./bin"]

[liftover.source_url]

linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/liftOver"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/liftOver"
windows = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/liftOver"

[liftover.install]
linux = "chmod +x liftOver"
mac = "chmod +x liftOver"
windows = ""
